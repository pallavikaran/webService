
package service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.1-hudson-28-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "calculator", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Calculator {


    /**
     * 
     * @param no2
     * @param no1
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sum", targetNamespace = "http://service/", className = "service.Sum")
    @ResponseWrapper(localName = "sumResponse", targetNamespace = "http://service/", className = "service.SumResponse")
    @Action(input = "http://service/calculator/sumRequest", output = "http://service/calculator/sumResponse")
    public int sum(
        @WebParam(name = "no1", targetNamespace = "")
        int no1,
        @WebParam(name = "no2", targetNamespace = "")
        int no2);

    /**
     * 
     * @param b
     * @param a
     * @return
     *     returns float
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "divide", targetNamespace = "http://service/", className = "service.Divide")
    @ResponseWrapper(localName = "divideResponse", targetNamespace = "http://service/", className = "service.DivideResponse")
    @Action(input = "http://service/calculator/divideRequest", output = "http://service/calculator/divideResponse")
    public float divide(
        @WebParam(name = "a", targetNamespace = "")
        int a,
        @WebParam(name = "b", targetNamespace = "")
        int b);

    /**
     * 
     * @param b
     * @param a
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "difference", targetNamespace = "http://service/", className = "service.Difference")
    @ResponseWrapper(localName = "differenceResponse", targetNamespace = "http://service/", className = "service.DifferenceResponse")
    @Action(input = "http://service/calculator/differenceRequest", output = "http://service/calculator/differenceResponse")
    public int difference(
        @WebParam(name = "a", targetNamespace = "")
        int a,
        @WebParam(name = "b", targetNamespace = "")
        int b);

    /**
     * 
     * @param b
     * @param a
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "product", targetNamespace = "http://service/", className = "service.Product")
    @ResponseWrapper(localName = "productResponse", targetNamespace = "http://service/", className = "service.ProductResponse")
    @Action(input = "http://service/calculator/productRequest", output = "http://service/calculator/productResponse")
    public int product(
        @WebParam(name = "a", targetNamespace = "")
        int a,
        @WebParam(name = "b", targetNamespace = "")
        int b);

}
